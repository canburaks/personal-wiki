[{"text":"Bir nevi dijital bahçe ve kişisel wikim. Buradaki notlar bir [[TiddlyWiki|https://tiddlywiki.com/]] versiyonu olan [[TiddlyResearch|https://kebifurai.github.io/TiddlyResearch/]] ile alınmıştır.\n","type":"text/vnd.tiddlywiki","title":"# Kişisel Wiki: Dijital Bahçe","stream-type":"default","stream-list":"","readme":"","original-plugin-type":"asd","modified":"20200908233202648","created":"20200905164037308"},{"text":"[[Blog yazılarımın|https://www.cbsofyalioglu.com/]] linkleri.\n\n\n\n''İngilizce Yazılar:''\n\n* [[Django and Modern JS Libraries - Backend|https://www.cbsofyalioglu.com/post/django-and-modern-js-libraries-backend/]]\n* [[Django and Modern JS Libraries - React|https://www.cbsofyalioglu.com/post/django-and-modern-js-libraries-react/]]\n* [[Django and Modern JS Libraries - Svelte|https://www.cbsofyalioglu.com/post/django-and-modern-js-libraries-svelte/]]\n\n\n","type":"text/vnd.tiddlywiki","title":"Blog","tags":"Tiddler Folder","modified":"20200905165629690","created":"20200905163210929"},{"text":"","title":"Bussiness Management Ekitap bul","tags":"To-do todo","modified":"20200921024806667","created":"20200921024726358"},{"text":"/* \nbody.tc-body {background:red;}\n*/","title":"cbs-stylesheet","tags":"$:/tags/Stylesheet","modified":"20200926002922679","created":"20200926002841793"},{"text":"Arşiv amaçlı saklanan code snippetleri.\n\n* [[JavaScript|JavaScript Snippets]]\n** [[Deep Compare|Deep Compare]] Derin Karşılaştırma Yapar.\n** [[HTML Attribute Remover|HTML Attribute Remover]]: String şeklinde verilen HTML'deki tüm attributeları siler.\n** [[Svelte External Script Loader]]: Script yükleyen Svelte componenti.\n\n\n* [[CSS|CSS Snippets]]\n** [[Frost-Effect|Frost-Blur Effect]]\n\n* ''Python Snippets''\n** [[Django Deployments on Digital Ocean]]: Django'yu SSH ile Digital Ocean'a yükleme yazısı.\n\n* [[Linux Komutları|Systemd Komutları]]\n* [[React Hooks|React Hooks]]\n\n* [[Git Komutları|Git Komutları]]\n** [[Yeni Git Reposu Oluştur|Git Reposu Oluştur]]","type":"text/vnd.tiddlywiki","title":"Codesheet","tags":"Tiddler Folder","modified":"20200927014305590","created":"20200924025823671"},{"text":"!! Effects\n* [[Frost-Blur Effect|Frost-Blur Effect]]\n","title":"CSS Snippets","tags":"Tiddler css code","modified":"20200924131358235","created":"20200921031211505"},{"text":"Array ve objeleri kıyaslayıp derin karşılaştırma yapar.\n\n\n```javascript\nexport function isEqualObj(a,b){\n   // Create arrays of property names\n   var aProps = Object.getOwnPropertyNames(a);\n   var bProps = Object.getOwnPropertyNames(b);\n\n   // If number of properties is different,\n   // objects are not equivalent\n   if (aProps.length != bProps.length) {\n       return false;\n   }\n\n   for (var i = 0; i < aProps.length; i++) {\n       var propName = aProps[i];\n\n       // If values of same property are not equal,\n       // objects are not equivalent\n       if (a[propName] !== b[propName]) {\n           return false;\n       }\n   }\n   // If we made it this far, objects\n   // are considered equivalent\n   return true;\n}\n```\n\n* React kullanırken state değişiminin gerekli olup olmadığına bakılabilir..\n","title":"Deep Compare","modified":"20200927013355020","created":"20200924131620291"},{"text":"<html><img src=\"https://images.prismic.io/www-static/49aa0a09-06d2-4bba-ad20-4bcbe56ac507_logo.png?auto=compress,format\" alt=\"digital ocean logo\" style=\"width:100%; height:auto; min-height:80px\" /></html>\n\n\nAfter pushing the code to GitHub repo, connect your cloud instance with any SSH or console (Digital Ocean Console).\n\nEnter your username (root) and password you defined at the time of the creation of droplet. \n\n```bash\nsudo apt update\nsudo apt-get install git\ngit clone ~https://github.com/canburaks/livicom-turkiye-content-edit.git`\nls livicom-turkiye-content-edit\n```\n<br/>\nInstall ''pipenv'' pacgkage for virtual environment.\n\n```bash\nsudo apt-get install pipenv\n```\n\n<br/>\n\nInstall ''nginx'' for server.\n\n```bash\nsudo apt-get install nginx\n```\n\n<br/>\n\nUpdate and install required system-wide python packages.\n\n```bash\nsudo apt update && apt -y upgrade\n```\n\n<br/>\n\nInstall required python packages.\n\n```bash\npipenv install Django django-cors-headers django-extensions django-graphql-jwt graphene graphene-django gunicorn ipython Pillow requests\n```\n<br/>\n\nInstead of standard command, we will run Django server as follow. \n\n```bash\npipenv run python manage.py runserver 0.0.0.0:80\n```\n<br/>\n\nIf it throws error that say ''The port is already in use'' then shut those servers with those commands.\n\n```bash\nservice apache2 stop\nservice nginx stop\n```\n\n<br/>\n\nNote: If you forget to append your remote instance's IP to your CORS list, open ''settings.py'' file and edit as follow:\n\n```bash\nCORS_ORIGIN_WHITELIST = (\n    \"http://your-ip-of-remote-instance\",\n    \"http://your-domain-name\",\n    \"http://127.0.0.1:8000\",\n    'http://localhost:8080',\n)\n```\n\n<br/>\n\nThen you can start your server again with the following command:\n\n```bash\npipenv run python manage.py runserver 0.0.0.0:80\n```\n","type":"","title":"Django Deployments on Digital Ocean","tags":"Tiddler code cloud","modified":"20200926171635583","created":"20200926155719192"},{"text":"Bir dokümantasyon programı olarak çok beğendim [[CODEDOC|https://codedoc.cc/]]'u. Markdown özelleştirmeye izin vermesi ve custom component yapılabilmesi önemli. İleride detaylı kullanacağım\n\n<html>\n<a href=\"https://codedoc.cc/\" target=\"_blank\">\n<style>svg#codedoc {padding:64px;}</style>\n<svg id=\"codedoc\" width=\"536\" height=\"296\" viewBox=\"0 0 536 296\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M336 168C371.346 168 400 196.654 400 232C400 267.346 371.346 296 336 296C300.654 296 272 267.346 272 232C272 196.654 300.654 168 336 168ZM472 168C507.346 168 536 196.654 536 232C536 267.346 507.346 296 472 296H448C443.582 296 440 292.418 440 288C440 283.582 443.582 280 448 280H472C498.51 280 520 258.51 520 232C520 205.49 498.51 184 472 184H448C443.582 184 440 180.418 440 176C440 171.582 443.582 168 448 168H472ZM224 168C228.418 168 232 171.582 232 176V288C232 292.418 228.418 296 224 296H200C164.654 296 136 267.346 136 232C136 196.654 164.654 168 200 168H224ZM88 168C92.4183 168 96 171.582 96 176V288C96 292.418 92.4183 296 88 296H8C3.58172 296 0 292.418 0 288V176C0 171.582 3.58172 168 8 168H88ZM336 184C309.49 184 288 205.49 288 232C288 258.51 309.49 280 336 280C362.51 280 384 258.51 384 232C384 205.49 362.51 184 336 184ZM217 184H200C173.49 184 152 205.49 152 232C152 258.51 173.49 280 200 280H217V184ZM200 0C235.346 0 264 28.6538 264 64C264 99.3462 235.346 128 200 128C164.654 128 136 99.3462 136 64C136 28.6538 164.654 0 200 0ZM88 0C92.4183 0 96 3.58172 96 8C96 12.4183 92.4183 16 88 16H64C37.4903 16 16 37.4903 16 64C16 90.5097 37.4903 112 64 112H88C92.4183 112 96 115.582 96 120C96 124.418 92.4183 128 88 128H64C28.6538 128 0 99.3462 0 64C0 28.6538 28.6538 0 64 0H88ZM336 0C371.346 0 400 28.6538 400 64C400 99.3462 371.346 128 336 128H312C307.582 128 304 124.418 304 120V8C304 3.58172 307.582 0 312 0H336ZM528 0C532.418 0 536 3.58172 536 8C536 12.4183 532.418 16 528 16H456V56H528C532.418 56 536 59.5817 536 64C536 68.4183 532.418 72 528 72H456V112H528C532.418 112 536 115.582 536 120C536 124.418 532.418 128 528 128H448C443.582 128 440 124.418 440 120V8C440 3.58172 443.582 0 448 0H528ZM200 16C173.49 16 152 37.4903 152 64C152 90.5097 173.49 112 200 112C226.51 112 248 90.5097 248 64C248 37.4903 226.51 16 200 16ZM336 16H319V112H336C362.51 112 384 90.5097 384 64C384 37.4903 362.51 16 336 16Z\" fill=\"#212121\"/>\n</svg>\n</a>\n</html>\n\n","title":"Dokümantasyon Programı - CODEDOC","tags":"Tiddler docs codedoc markdown","modified":"20200911184320399","created":"20200911183301215"},{"text":"\\define my-static-website()\n<$action-sendmessage $message=\"tm-zip-create\" $param=\"$:/temp/_ZipTiddler\"/>\n<$list filter=\"[all[tiddlers]!is[system]limit[100]]\">\n<$action-sendmessage $message=\"tm-zip-render-file\" $param=\"$:/temp/_ZipTiddler\" filename={{{ [<currentTiddler>encodeuricomponent[]addsuffix[.html]] }}} tiddler=<<currentTiddler>> template=\"$:/core/templates/static.tiddler.html\"/>\n</$list>\n<$action-sendmessage $message=\"tm-zip-render-file\" $param=\"$:/temp/_ZipTiddler\" filename=\"static.css\" template=\"$:/core/templates/static.template.css\"/>\n<$action-sendmessage $message=\"tm-zip-download\" $param=\"$:/temp/_ZipTiddler\" filename=\"digitalgarden.zip\"/>\n\\end\n\n\n<$button actions=<<my-static-website>>>\nGenerate Static Website\n</$button>","title":"Export","tags":"Tiddler","modified":"20200908062718752","created":"20200908062036523"},{"text":"```css\n/* --> Makes backdrop frost-blur effect on a container */\n.frost-blur { \n  -webkit-backdrop-filter: blur(40px);\n  backdrop-filter: blur(40px);\n}\n```","title":"Frost-Blur Effect","modified":"20200924131407326","created":"20200924131402801"},{"text":"* [[Yeni Bir Repo Oluştur|Git Reposu Oluştur]]","title":"Git Komutları","stream-type":"default","stream-list":"","modified":"20200924130819439","created":"20200924125302160"},{"text":"# ~GitHub'da yeni bir repo oluştur. Daha sonra lokal klasöre gidip aşağıdaki komutları gir.\n```bash\ngit init\ngit add . && git commit -m \"first commit\"\ngit branch -M master\n\ngit remote add origin git@github.com:canburaks/repo-ismi.git\ngit push -u origin master\n```\nBöylece lokal dosyaların uzak git hesabına gönderilecektir.","title":"Git Reposu Oluştur","modified":"20200924130832791","created":"20200924130825742"},{"text":"String şeklinde verilen HTML'deki tüm attributeları siler.\n\n```js\nlet regex = /<\\s*([a-z][a-z0-9]*)\\s.*?>/gi\na.replace(regex, '<$1>')\n```\n<br/>\n\nÖrnek olarak a stringine bakalım\n\n```js\nlet a = `<div class=\"ce-block\"><div class=\"ce-block__content\"><h1 class=\"ce-header\" contenteditable=\"false\" data-placeholder=\"Enter a header\">Add a Title</h1></div></div><div class=\"ce-block\"><div class=\"ce-block__content\"><div class=\"ae-paragraph cdx-block\" contenteditable=\"true\" data-placeholder=\"Title\">Content will be here</div></div></div>`\n```\n<br/>\nAşağıdaki komut bize temiz HTML'i verecektir.\n\n```js\na.replace(regex, '<$1>')\n```","title":"HTML Attribute Remover","modified":"20200924132254305","created":"20200924131947240"},{"text":"* [[Deep Compare|Deep Compare]]: Array ve Objeleri Kıyaslar.\n\n*  [[HTML Attribute Remover|HTML Attribute Remover]]: String şeklinde verilen HTML'deki tüm attributeları siler.\n\n* [[Svelte External Script Loader]]: Script yükleyen Svelte Componenti.\n","title":"JavaScript Snippets","tags":"Tiddler code javascript","modified":"20200927014051654","created":"20200921031635747"},{"text":"Abbas Kiyarüstemi'nin Kirazın Tadı filminden bir sahne. İlaç niyetine.\n\n<html><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/U2RMqInBS6c\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></html>","title":"Kirazın Tadı: Bir Dut Hayatımı Kurtardı","tags":"Tiddler happy kirazın-tadı abbas-kiarostami dut","modified":"20200908232659522","created":"20200908232454548"},{"text":"!!! useDebounce Hook\nA hook that debounces the giving value.\n\n```jsx\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n// const value = useDebounce(val, 500)\n```\n\n!! useLocation Hook\nURL location hook which fires when URL (location.pathname) changes.\n\n```jsx\nexport function useLocation(){\n    const [ location, setLocation ] = useState(window.location.pathname)\n    function locListener(){\n        const isSamePage = location==window.location.pathname\n        //console.log(\"isSamePage\", isSamePage)\n\n        if(!isSamePage){\n            setLocation(window.location.pathname)\n        }\n    }\n    useEffect(() =>{\n        locListener()\n        window.addEventListener(\"location\", locListener);\n        // for removing repeatedly rendering\n        return () =>{\n            window.removeEventListener(\"location\", locListener);\n        }\n    },[window.location.pathname])\n    //console.log(\"hook\", location)\n\n    return location\n}\n// const path = useLocation()\n```\n\n\n!! useWindowWidth\nA hook that listens window resizing.\n\n```jsx\nexport function useWindowWidth() {\n  const [screenSize, setScreenSize] = useState(window.innerWidth)//      S | M | L\n\n  const screenListener = () => {\n      const currentSize = window.innerWidth;\n      //if size (not width) is changed, then change state\n      if (screenSize != currentSize) {\n          setScreenSize(currentSize);\n      }\n  }\n\n  useEffect(() => {\n      // Once screenSize changed this will be fired\n      window.addEventListener(\"resize\", screenListener);\n      // for removing repeatedly rendering\n      return () => {\n          window.removeEventListener(\"resize\", screenListener);\n      }\n  })\n  return screenSize\n}\n// const vw = useWindowWidth()\n```","title":"React Hooks","tags":"Tiddler code react","modified":"20200921031629448","created":"20200921031323788"},{"text":"* ~TiddlyWiki\n** [[TiddlyWiki toolmap|https://dynalist.io/d/zUP-nIWu2FFoXH-oM7L7d9DM]]\n\n** [[Reddit TW5|https://www.reddit.com/r/TiddlyWiki5/wiki/pluginsandresources]]","title":"Readlinks","tags":"Tiddler Folder","modified":"20200908063819151","created":"20200908063326022"},{"text":"* [[Toggle Admin|Toggle Admin]]\n* [[Base CSS|$:/plugins/kebi/tiddlyresearch-references/css]]","title":"Settings","tags":"Tiddler Folder","modified":"20200924033904239","created":"20200924033812051"},{"text":"Bu yöntemi Stackoverflow'da [[blindfish|https://stackoverflow.com/a/61979865/9351362]] yazmış.\n\n```html\n// LibLoader.svelte\n\n<svelte:head>\n  <script bind:this={script} src={url} />\n</svelte:head>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  export let url;\n  let script;\n\n  onMount(async () => {\n    script.addEventListener('load', () => {\n      dispatch('loaded');\n    })\n\n    script.addEventListener('error', (event) => {\n      console.error(\"something went wrong\", event);\n      dispatch('error');\n    });\n  });\n</script>\n```\n\n<br/>\n\n```html\n// MyComponent.svelte\n\n<LibLoader url=\"myExternalLib.js\"\non:loaded=\"{onLoaded}\" />\n\n\n<script>\n  import LibLoader from './LibLoader.svelte';\n\n\n  function onLoaded() {\n    myExternalLib.doStuff();\n  }\n</script>\n```","title":"Svelte External Script Loader","tags":"code svelte","stream-type":"default","stream-list":"20200927013544713","parent":"JavaScript Snippets","modified":"20200927014051625","created":"20200927012846296"},{"text":"!! Başlangıç Uygulamalarını Listele\n```bash\nsystemctl -t service --state=active\n```\n\n!! Tüm Uygulamaları Listele\n```bash\nsystemctl -at service\n```\n\n!! Uygulama Başlangıç Durumunu Aç/Kapa\n```\nsudo systemctl enable {service}\nsudo systemctl enable confluence.service\n\nsudo systemctl disable {service}\nsudo systemctl disable nginx.service\n```","title":"Systemd Komutları","tags":"Tiddler code linux command","modified":"20200921031157860","created":"20200921022339169"},{"text":"Bu başlıkta ~TiddlyWiki hakkındaki bilgiler ve yararlı kaynakları biriktireceğim.\n\n* ''Pluginler''\n** [[Backlink Autocomplete Plugini|https://snowgoon88.github.io/TW5-extendedit/]]: `[[` dan sonra otomatik tamamlama önerisinde bulunan plugin. (Plugini sürükle ve bırak.)\n\n<br/>\n\n* ''TiddlyFormat ''[[(ref)|https://tiddlywiki.com/static/Formatting%2520in%2520WikiText.html]]\n** \n** ''Inline Code'': Backtick kullan: `inline code`\n\n<br/>\n\n* ''TiddlySettings''\n** Stylesheet Kullanma [[(ref)|https://tiddlywiki.com/static/Using%2520Stylesheets.html]]: Tiddler oluştur ve `$:/tags/Stylesheet` ile etiketle. Örnek: [[cbs-stylesheet]]","title":"Tiddlysport","tags":"Tiddler Folder","modified":"20200926003015748","created":"20200926000837953"},{"text":"<<project>>","title":"To-do","tags":"Project","modified":"20200921024721095","created":"20200921024708353"},{"text":"<a class=\"tc-tiddlylink tc-tiddlylink-resolves\" href=\"http://stefct-resources.tiddlyspot.com/#%24%3A%2Ftools%2FToggleAdmin\" style=\"box-sizing: border-box; background: rgb(255, 255, 255); outline: 0px; text-decoration: underline; font-weight: 400; color: rgb(120, 151, 243); user-select: inherit; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Lucida Grande&quot;, &quot;DejaVu Sans&quot;, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px;\">$:/tools/ToggleAdmin</a>","title":"Toggle Admin","tags":"Tiddler","stream-type":"default","stream-list":"","modified":"20200927214441178","created":"20200924033751259"},{"text":"<span style=\"color: rgb(255, 238, 221); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">oz</span>","title":"Untitled"},{"text":"<html><blockquote>\"Resmi ideolojiye inanmak, muhalif olmaya giden yolun ilk adımıdır.\" Slavoj Žižek: </blockquote> <br/>\n<html><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/luTPBas7GDk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></html>","title":"Zizek ve İdeoloji","tags":"Tiddler happy slavoj-zizek video ideoloji batıl-inanç","stream-type":"default","stream-list":"","modified":"20200914133930476","created":"20200908232232764"}]